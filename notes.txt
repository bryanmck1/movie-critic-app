Things to fix:
  Allow logged in user to reset password
  Display a better message when user requests password reset
  Fix the Profile button in the nav bar not having an event listener attached to it after going to a new page
  
  <%= form_tag(reviews_path, method: :get, class:"text-sm w-full flex justify-center border-2 border-black") do %>
        <%= collection_select(:review, :release_year, Review.pluck(:release_year).uniq, :to_s, :to_s, {:prompt => "Release Year"}, {:multiple => true}) %>
        <%= collection_select(:review, :genre, Review.pluck(:genre).uniq, :to_s, :to_s, {:prompt => "Genre"}, {:multiple => true}) %>
        <%= collection_select(:review, :rating, Review.pluck(:rating).uniq, :to_s, :to_s, {:prompt => "Rating"}, {:multiple => true}) %>
        <%= collection_select(:review, :review_score, Review.pluck(:review_score).uniq, :to_s, :to_s, {:prompt => "Score"}, {:multiple => true}) %>
        <%= submit_tag "Filter" %>
      <% end %>

                <% Review.distinct.pluck(:genre).each do |genre| %>
            <div>
              <%= check_box_tag 'genre[]', genre %>
              <%= label_tag "genre_#{genre}", genre %>
            </div>
          <% end %>

<% if Review.exists?(imdb_id: result['imdbID']) %>
              <div class="text-sm">
                <button class="hover:bg-blue-700 text-blue-700 border-2 border-blue-400 hover:text-white hover:border-white font-normal py-2 px-4 rounded focus:outline-none focus:shadow-outline">
                  <%= link_to 'Edit', '#' %>
                </button>
                <button class="hover:bg-blue-700 text-blue-700 border-2 border-blue-400 hover:text-white hover:border-white font-normal py-2 px-4 rounded focus:outline-none focus:shadow-outline">
                  <%= link_to 'Delete', '#' %>
                </button>
              </div>
              <% else %>



<%= turbo_frame_tag 'reviews_frame' do %>
    <div class="mt-12 w-11/12 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-4 gap-4">
      <% if params[:query].present? || @filter_params %>
        <% reviews = params[:query].present? ? @search_results : @filter_params %>
      <% elsif @reviews.any? %>
        <% reviews = @reviews.order(:movie_title) %>
      <% end %>
      <% reviews.each do |review| %>
        <%= render partial: 'movie_layout', locals: { review: review } %>
        <%= render partial: 'delete_modal', locals: { review: review } %>
      <% end %>
      <% if params[:filter].blank? %> 
        <% @reviews.order(:movie_title).each do |review|%>
          <%= render partial: 'movie_layout', locals: { review: review } %>
          <%= render partial: 'delete_modal', locals: { review: review } %>
        <% end %>
      <% end %>    
 
    </div>
    <% end %>






           <% reviews = params[:query].present? ? @search_results : (@params_exist ? @filter_params : @reviews) %>
        <% reviews.sort_by! { |review| review["movie_title"] } %>
          <% reviews.each do |review| %>
            <%= render partial: 'movie_layout', locals: { movie_poster: review["movie_poster"], id: review["id"], movie_title: review["movie_title"], review_score: review["review_score"]  }%>           
            <%= render partial: 'delete_modal', locals: { id: review["id"], movie_title: review["movie_title"] }%>               
          <% end %>